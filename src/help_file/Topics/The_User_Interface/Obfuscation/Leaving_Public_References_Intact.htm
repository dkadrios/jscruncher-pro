<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Leaving Public References Intact</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=665>
<meta name=layout-width content=775>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="..\..\..\default.css">



</head>

<!--(Body)==========================================================-->


<body>

<!--(Generated Script Links)========================================-->
<!--(Generated Code)================================================-->
<!--(WARNING: DO NOT EDIT OR DELETE THIS SECTION!)==================-->
<!--begin!kadov{{===================================================-->
<script type="text/javascript" language="JavaScript1.2" src="..\..\..\ehlpdhtm.js" x-save-method="compute-relative"></script>
<script type="text/javascript"
		language=JavaScript1.2>
<!-- 
if( typeof( kadovInitEffects ) != 'function' ) kadovInitEffects = new Function();if( typeof( kadovInitTrigger ) != 'function' ) kadovInitTrigger = new Function();if( typeof( kadovFilePopupInit ) != 'function' ) kadovFilePopupInit = new Function();if( typeof( kadovTextPopupInit ) != 'function' ) kadovTextPopupInit = new Function();
 //-->
</script>

<!--}}end!kadov=====================================================-->
<!--(==============================================================)-->


<h1>Leaving Public References Intact</h1>

<p>Normally the obfuscation engine will replace all your variable and function 
 names with it's own tokens. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 is not always desirable though. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 instance, if your code is to be used by other developers, you may want 
 to leave certain function names intact.</p>

<p>&nbsp;</p>

<p>Consider the following function:</p>

<p class=Code>function autocompleteKey(E){</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->var 
 e = core.findTarget(E,&quot;INPUT&quot;);</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->var 
 k = core.isIE?E.keyCode:E.which;//E.charCode;</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->if(core._isSpecialKey(k))return 
 true; // take no action, let the keystroke surface</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->core.inputReplaceSelection(e, 
 String.fromCharCode(k));</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->var 
 len = e.value.length;</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->var 
 m <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->= 
 core._autocompleteMatch(e.value, e._autocompleteList, e.casesensitive);</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->if(m&gt;=0){</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->e.value 
 = e._autocompleteList[m];</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->core.inputSelectRange(e, 
 len, e.value.length);</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->if(e.onautocomplete)e.onautocomplete(m); 
 // returns index in list</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->if(E 
 &amp;&amp; E.preventDefault)E.preventDefault(); // for moz</p>

<p class=Code><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->return 
 false; // for non moz</p>

<p class=Code>};</p>

<p>&nbsp;</p>

<p>Compressing with obfuscation will yield something like:</p>

<p class=Code>function Dg0(E){var r1a=l6q.TO4(E,&quot;INPUT&quot;);var 
 k03=l6q.vN6?E.C7Q:E.x3l;if(l6q.Br5(k03))return true;l6q.d8C(r1a,String.fromCharCode(k03));var 
 K74=r1a.value.length;var w2J=l6q.KYr(r1a.value,r1a.guW,r1a.KFx);if(w2J&gt;=0){r1a.value=r1a.guW[w2J];l6q.Kk1(r1a,K74,r1a.value.length);if(r1a.x4Y)r1a.x4Y(w2J)}if(E&amp;&amp;E.preventDefault)E.preventDefault();return 
 false};</p>

<p>&nbsp;</p>

<p>In order to have the function available to the developer, you'll want 
 to exclude it's name (autocompleteKey in this case) from being obfuscated, 
 while still obfuscating the rest. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 is accomplished using a <a href="..\..\..\Definitions\Map_Files.htm">map file</a>.</p>

<p>To exclude any tokens, you simply add them to an existing or new map 
 file, located on your <a href="javascript:BSSCPopup('../../../Definitions/Map_path.htm');" id="a1">map path</a><!--begin!kadov{{--><script 
 type="text/javascript"
	language=JavaScript1.2><!--
kadovFilePopupInit('a1');
//--></script><!--}}end!kadov-->.</p>

<p>&nbsp;</p>

<p>See <a href="Excluding_tokens.htm">Excluding tokens</a> for an explanation 
 of how to do this from within the application.</p>

</body>

</html>
